@using BookingEnginePMS.Models;
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    string dataChart = (string)ViewData["dataChart"];
    List<TransitionLanguage> transitions = (List<TransitionLanguage>)Session["transitions"];
    Transition transition = new Transition(transitions);
}
<input type="hidden" id="dataChart" value="@dataChart" />
<script>
    $("#menu_1").addClass('click-menu-top')
</script>
<script src="~/Areas/Admin/Content/js/Home/home.js"></script>
<div class="uk-grid uk-margin-bottom">
    <div class="uk-width-1">
        <h3 style="display: inline;margin-right: 10px;">@(transition.Translate(1, "Overview of the situation today"))</h3>
        <a href="/Admin/Reservation/New" class="md-btn md-btn-new">@(transition.Translate(2, "Add New Reservation"))</a>
    </div>
</div>
<div cal="{{calTotalBookingArrivalDeparture()}}" class="uk-grid uk-grid-width-large-1-4 uk-grid-width-medium-1-2 uk-grid-medium uk-sortable sortable-handler hierarchical_show" data-uk-sortable data-uk-grid-margin>
    <div>
        <div class="md-card">
            <div class="md-card-content">
                <b style="font-size: 16px;">@(transition.Translate(3, "ARRIVALS"))</b>
                <span style="color:#3ABB79;font-size:  20px;display:  block;">{{totalBookingArrival}}</span>
            </div>
        </div>
    </div>
    <div>
        <div class="md-card">
            <div class="md-card-content">
                <b style="font-size: 16px;">@(transition.Translate(4, "DEPARTURES"))</b>
                <span style="color:#FF0000;font-size:  20px;display:  block;">{{totalBookingDeparture}}</span>
            </div>
        </div>
    </div>
    <div>
        <div class="md-card">
            <div class="md-card-content">
                <b style="font-size: 16px;">@(transition.Translate(5, "ROOMS BOOKED"))</b>
                <span style="color:#358EC9;font-size:  20px;display:  block;">{{numberRoomUsed}}</span>
            </div>
        </div>
    </div>
    <div>
        <div class="md-card">
            <div class="md-card-content">
                <b style="font-size: 16px;">@(transition.Translate(6, "AVAILABLE"))</b>
                <span style="font-size:20px;display:  block;color:#21D21E">{{totalRoomInHotel -numberRoomUsed }}</span>
            </div>
        </div>
    </div>
</div>
<div class="uk-grid uk-margin-top uk-margin-large-bottom">
    <div class="uk-width-1 uk-margin-bottom uk-text-right">
        <div class="uk-grid">
            <div class="uk-width-medium-3-5">
                <label>
                    <input ng-change="GetData()" ng-model="filters.rangeToday" type="radio" name="today" value="0" convert-to-number />
                    <span>@(transition.Translate(7, "Today"))</span>
                </label>
                <label>
                    <input ng-change="GetData()" ng-model="filters.rangeToday" type="radio" name="today" value="1" convert-to-number />
                    <span>@(transition.Translate(8, "Tomorrow"))</span>
                </label>
            </div>
        </div>
    </div>
    <div class="uk-width-medium-3-5">
        <div>
            <ul class="uk-tab" data-uk-tab="{connect:'#tabs_home_book',swiping: false}">
                <li class="genenral-tab uk-active"><a href="#">@(transition.Translate(9, "Arrivals"))</a></li>
                <li><a href="#">@(transition.Translate(10, "Departures"))</a></li>
                <li><a href="#">@(transition.Translate(11, "In House Guests"))</a></li>
                <li><a href="#">@(transition.Translate(12, "Stayovers"))</a></li>
            </ul>
            <ul id="tabs_home_book" class="uk-switcher uk-margin" style="overflow: unset;padding-top: 1px;">
                <li class="genenral-tab">
                    @Html.Partial("~/Areas/Admin/Views/Home/pArrivals.cshtml", transition)
                </li>
                <li>
                    @Html.Partial("~/Areas/Admin/Views/Home/pDeparture.cshtml", transition)
                </li>
                <li>
                    @Html.Partial("~/Areas/Admin/Views/Home/pInHouse.cshtml", transition)
                </li>
                <li>
                    @Html.Partial("~/Areas/Admin/Views/Home/pStayOver.cshtml", transition)
                </li>
            </ul>
        </div>
    </div>
    <div class="uk-width-medium-2-5">
        <div id="layout2"></div>
    </div>
    <div class="uk-width-1 uk-margin-large-bottom">
        <div class="uk-grid uk-margin-medium-bottom">
            <div class="uk-width-1">
                <h3><b>@(transition.Translate(13, "Statistics available room"))</b></h3>
            </div>
        </div>
        @Html.Partial("~/Areas/Admin/Views/PartialView/pRoomFuture.cshtml", transition)
    </div>
</div>

@Html.Partial("~/Areas/Admin/Views/Reservation/Edit/BookingDetail/pModalAssignRoom.cshtml", transition)
<script src="~/Areas/Admin/Content/js/Chart/configChart.js"></script>
<script src="~/Areas/Admin/lib/esl.js"></script>
<script src="~/Areas/Admin/lib/config.js"></script>
<script src="~/Areas/Admin/lib/testHelper.js"></script>
@*<script src="~/Areas/Admin/Content/js/Chart/configChart.js"></script>*@
<script>
    $(document).ready(function () {
        var dataChart = JSON.parse($("#dataChart").val())
        dataChart.dateTitleChart.unshift('booking');
        dataChart.roomUsed.unshift('@(transition.Translate(34, "Room Used"))');
        dataChart.roomAvailable.unshift('@(transition.Translate(35, "Room Available"))');
        console.log(dataChart)
        var arrayRows1 = [
            dataChart.dateTitleChart,
            dataChart.roomUsed,
            dataChart.roomAvailable
        ];
        requireChart(['echarts'], function (echarts) {

            var option = {
                legend: {},
                tooltip: {
                    trigger: 'axis',
                    showContent: true
                },
                dataset: {
                    source: arrayRows1
                },
                color: ['#358ED3', '#21d21e'],
                xAxis: { type: 'category' },
                yAxis: { gridIndex: 0 },
                grid: { top: '50%' },
                series: [
                    { type: 'line', smooth: true, seriesLayoutBy: 'row' },
                    { type: 'line', smooth: true, seriesLayoutBy: 'row' },
                    {
                        type: 'pie',
                        id: 'pie',
                        radius: '30%',
                        center: ['50%', '25%'],
                        label: {
                            formatter: '{b}: {@@' + dataChart.dateTitleChart[1] + '} ({d}%)'
                        },
                        encode: {
                            itemName: 'booking',
                            value: dataChart.dateTitleChart[1],
                            tooltip: dataChart.dateTitleChart[1]
                        }
                    }
                ]
            };

            var chart = testHelper.create(echarts, 'layout2', {
                option: option,
                dataTable: arrayRows1,
                height: 400
            });

            chart && chart.on('updateAxisPointer', function (event) {
                var xAxisInfo = event.axesInfo[0];
                if (xAxisInfo) {
                    var dimension = xAxisInfo.value + 1;
                    chart.setOption({
                        series: {
                            id: 'pie',
                            label: {
                                formatter: '{b}: {@@[' + dimension + ']} ({d}%)'
                            },
                            encode: {
                                value: dimension,
                                tooltip: dimension
                            }
                        }
                    });
                }
            });
        });
    });
</script>